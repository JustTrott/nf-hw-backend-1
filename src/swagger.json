{
	"openapi": "3.0.0",
	"info": {
		"title": "Event Management & Authentication API",
		"description": "API for managing events and handling user authentication (registration, login, refresh token).",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "https://nf-hw-backend-1-production-5182.up.railway.app/api/v1"
		}
	],
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "The unique identifier of the user."
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"city": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				}
			},
			"Event": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "The unique identifier of the event."
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"location": {
						"type": "string"
					},
					"duration": {
						"type": "string"
					},
					"rating": {
						"type": "number"
					}
				}
			},
			"CreateUserDTO": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				}
			},
			"CredentialsDTO": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string"
					}
				}
			},
			"RefreshTokenDTO": {
				"type": "object",
				"properties": {
					"token": {
						"type": "string"
					}
				}
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				}
			}
		}
	},
	"paths": {
		"/register": {
			"post": {
				"summary": "Register a new user",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDTO"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/login": {
			"post": {
				"summary": "Log in a user",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CredentialsDTO"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful login",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								}
							}
						}
					},
					"401": {
						"description": "Invalid credentials"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/refresh-token": {
			"post": {
				"summary": "Refresh an access token",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshTokenDTO"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Access token refreshed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								}
							}
						}
					},
					"401": {
						"description": "Invalid or expired refresh token"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/protected": {
			"get": {
				"summary": "Protected route (requires authentication)",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Successful access",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				}
			}
		},
		"/events": {
			"get": {
				"summary": "Get a list of events (requires authentication)",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer",
							"default": 1
						}
					},
					{
						"in": "query",
						"name": "limit",
						"schema": {
							"type": "integer",
							"default": 10
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"schema": {
							"type": "string",
							"enum": [
								"name",
								"date",
								"location",
								"duration",
								"rating"
							],
							"default": "date"
						}
					},
					{
						"in": "query",
						"name": "sortDirection",
						"schema": {
							"type": "string",
							"enum": ["asc", "desc"],
							"default": "asc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "A list of events",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Event"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"summary": "Create a new event",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Event"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Event created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Event"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/events/{id}": {
			"get": {
				"summary": "Get an event by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true,
						"description": "The ID of the event"
					}
				],
				"responses": {
					"200": {
						"description": "The requested event",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Event"
								}
							}
						}
					},
					"404": {
						"description": "Event not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		}
	}
}
